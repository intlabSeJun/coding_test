"""
단계 : 3-4
문제번호 : 15552번
0보다 크거나 같고, 99보다 작거나 같은 정수가 주어질 때 다음과 같은 연산을 할 수 있다. 먼저 주어진 수가 10보다 작다면 앞에 0을 붙여 두 자리 수로 만들고, 각 자리의 숫자를 더한다. 그 다음, 주어진 수의 가장 오른쪽 자리 수와 앞에서 구한 합의 가장 오른쪽 자리 수를 이어 붙이면 새로운 수를 만들 수 있다. 다음 예를 보자.

26부터 시작한다. 2+6 = 8이다. 새로운 수는 68이다. 6+8 = 14이다. 새로운 수는 84이다. 8+4 = 12이다. 새로운 수는 42이다. 4+2 = 6이다. 새로운 수는 26이다.

위의 예는 4번만에 원래 수로 돌아올 수 있다. 따라서 26의 사이클의 길이는 4이다.

N이 주어졌을 때, N의 사이클의 길이를 구하는 프로그램을 작성하시오.

입력
첫째 줄에 N이 주어진다. N은 0보다 크거나 같고, 99보다 작거나 같은 정수이다.
"""

"""
2가지 풀이법이 있는데,
1) % 연산자를 사용하여 계산
2) type 전환하여 연선

이 코드는 2)type 전환, 하지만 1)번이 더 빠르다. 
"""
N = int(input())
assert N >= 0 and N <=99,'input 잘못 입력' # input 범위 지정

def func(num): # 숫자 받아서 문제에 맞게 계산한 후 반환
    convert_str = None # 문자형으로 전환하여 저장할 변수
    # 10미만의 숫자를 받을 시 앞에 0 붙여줌.
    if num < 10:
        convert_str = str(0) + str(num)
    else:
        convert_str = str(num)

    # 2자리 수에서 앞,뒤의 숫자를 빼내서 int형 전환
    front, back = int(convert_str[0]), int(convert_str[1])
    sum = front + back

    return int(str(back)+str(sum)[-1])

count = 0 # 총 반복 수
value = N # 업데이트 될 값.
while(1):
    value = func(value)
    count += 1
    if value == N:
        print(count)
        break

